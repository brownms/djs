language: rust
cache:    cargo

env:
  global:
    - PROJECT_NAME=djs
    - RUST_BACKTRACE: full

addons:
  apt:
    packages:
      # Needed for completion-function test
      - zsh
      - libssl-dev
      - cabal-install

matrix:
  fast_finish: true
  include:
    # Nightly channel.
    # (All *nix releases are done on the nightly channel to take advantage
    # of the regex library's multiple pattern SIMD search.)
    #- os: linux
    #  rust: nightly
    #  env: TARGET=i686-unknown-linux-musl
    #  sudo: required
    #  addons:
    #    apt:
    #      packages: &musl_packages
    #      - musl
    #      - musl-dev
    #      - musl-tools
    #- os: linux
    #  rust: nightly
    #  env: TARGET=x86_64-unknown-linux-musl
    #  sudo: required
    #  addons:
    #    apt:
    #      packages: &musl_packages
    #      - musl
    #      - musl-dev
    #      - musl-tools
    #- os: osx
    #  rust: nightly
    #  env: TARGET=x86_64-apple-darwin
    #- os: linux
    #  rust: nightly
    #  env: TARGET=arm-unknown-linux-gnueabihf GCC_VERSION=4.8
    #  addons:
    #    apt:
    #      packages:
    #      - gcc-4.8-arm-linux-gnueabihf
    #      - binutils-arm-linux-gnueabihf
    #      - libc6-armhf-cross
    #      - libc6-dev-armhf-cross
    ## Beta channel.
    #- os: linux
    #  rust: beta
    #  env: TARGET=x86_64-unknown-linux-musl
    #  sudo: required
    #  addons:
    #    apt:
    #      packages: &musl_packages
    #      - musl
    #      - musl-dev
    #      - musl-tools
    #- os: linux
    #  rust: beta
    #  env: TARGET=x86_64-unknown-linux-gnu
    # Minimum Rust supported channel.
    - os: osx
      rust: stable
      env: TARGET=x86_64-apple-darwin
    - os: linux
      rust: stable
      env: TARGET=x86_64-unknown-linux-gnu
      #- os: linux
      #- rust: 1.22.1
      #- env: TARGET=x86_64-unknown-linux-musl
      #- sudo: required
      #- addons:
      #-   apt:
      #-     packages: &musl_packages
      #-     - musl
      #-     - musl-dev
      #-     - musl-tools
      #- os: linux
      #- rust: 1.22.1
      #- env: TARGET=arm-unknown-linux-gnueabihf GCC_VERSION=4.8
      #- addons:
      #-   apt:
      #-     packages:
      #-     - gcc-4.8-arm-linux-gnueabihf
      #-     - binutils-arm-linux-gnueabihf
      #-     - libc6-armhf-cross
      #-     - libc6-dev-armhf-cross

before_install:
  - export PATH="$PATH:$HOME/.cargo/bin"

install:
  - bash ci/install.sh

script:
  - bash ci/script.sh

before_deploy:
  - bash ci/before_deploy.sh

deploy:
  provider: releases
  api_key:
      secure: VzPmTdKNi8Fnns0AvMwUdzpCe1ZDwaeaqEGJSu2qYVY2STavpc8OhYG5wrg6TyzM24CIXqMra/uN9RrOYJ0kB1EJPw83GExYirzbSi348QTbKile6Ye34PeelMtNTUp7C3PEcYZwSSrno3undXp/qM6i0upfYz5uZ0e00VbslYQ4JCj/UgySwvgmSReKRfJz6JnMAd9J5mEJjPrMlVlFFImV2C+P4/iBaUPJK10QxqDMDo2kVoqRaGuiyCDnMqkGqGy0uqqFPGyyP/jiLSv3OJtBra29nbmf+lOh8sIfbGTVU1toFHLGGt2LNDA9monINaptbg1Ac1rnaODp9UnnB4GC923BKvsgRPmpgA/VlZfZ8h+WLuVD83ieyZ6EUwYjUnykkD6GUVB8PmRrtjj5zvudFs6TOcjBAFg8i5uqwixe4lUrHAz8fJozXgxnRrJVLDzyFpho8jL1ixBEzWRAOx/l/NZ1QR8w4JNN9SkH6nN+94/jAkbkonD+dn6U/P5bVFpiPKk0WFJ3F35/4vJX/t0ZeCOwXsK1g0ZsHbhu0J1BpeNVzXcYp2agRKsBFfyc5Ayi2Z+pH+viSL5HRIZbqM9i+/BawL/+cCRvbOboqDTHEbMHYeapPgvhk2ILUxm8NlAxN3IraI6eLnFLosgkgSpGludVKT7DWVDrbe4Ybok=
  file_glob: true
  file: ${PROJECT_NAME}-${TRAVIS_TAG}-${TARGET}.*
  repo: trevershick/djs
  # don't delete the artifacts from previous phases
  skip_cleanup: true
  # deploy when a new tag is pushed
  on:
    # channel to use to produce the release artifacts
    # NOTE make sure you only release *once* per target
    # TODO you may want to pick a different channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true


branches:
  only:
    # Pushes and PR to the master branch
    - master
    # IMPORTANT Ruby regex to match tags. Required, or travis won't trigger deploys when a new tag
    # is pushed. This regex matches semantic versions like v1.2.3-rc4+2016.02.22
    - /^\d+\.\d+\.\d+.*$/

notifications:
  email:
    on_success: never
